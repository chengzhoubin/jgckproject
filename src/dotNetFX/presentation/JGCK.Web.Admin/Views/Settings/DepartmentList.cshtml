@model List<JGCK.Web.Admin.Models.VmDepartment>
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a href="#">基础管理</a>
            <i class="fa fa-circle"></i>
        </li>
        <li>
            <span>部门管理</span>
        </li>
    </ul>
    <div class="page-toolbar">
        <div class="btn-group pull-right">
            <button type="button" class="btn green btn-sm btn-outline" @@click="click_showPop()"> 新增 </button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <!-- BEGIN SAMPLE TABLE PORTLET-->
        <div class="portlet light">
            <div class="portlet-body">
                <div class="table-toolbar">
                    <table class="table table-striped table-bordered table-hover dataTable" id="sample_1">
                        <thead>
                            <tr>
                                <th> 序号 </th>
                                <th> 部门名称 </th>
                                <th> 备注 </th>
                                <th> 操作 </th>
                            </tr>
                        </thead>
                        <tbody>
                            @{
                                if (Model != null)
                                {
                                    var itemIndex = 1;
                                    foreach (var item in Model)
                                    {
                                        <tr>
                                            <td> @(itemIndex) </td>
                                            <td> @item.NagigatedDomainObject.Name </td>
                                            <td> @item.NagigatedDomainObject.Desc </td>
                                            <td> <button type="button" class="btn green btn-sm" @@click="click_showPop(@(item.HiddenJsonString))"> 编辑 </button> </td>
                                        </tr>
                                        itemIndex++;
                                    }
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
            <!-- END SAMPLE TABLE PORTLET-->
        </div>
    </div>
</div>


<div class="modal fade" id="modelbasic" tabindex="-1" role="basic" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <form role="form" class="form-horizontal" id="form_1" onsubmit="return false;">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                    <h4 class="modal-title">部门信息</h4>
                </div>
                <div class="modal-body">
                    <div class="form-body">
                        <div class="form-group">
                            <label class="col-md-4 control-label">部门名称&nbsp;&nbsp;<span style="color:red">*</span></label>
                            <div class="col-md-8">                           
                                    <div class="right input-group">
                                        <input type="text" class="form-control" v-model="Model.Name" name="Name" data-required="1">
                                    </div>
                                </div>
                            </div>
                        <div class="form-group">
                            <label class="col-md-4 control-label">备注</label>
                            <div class="col-md-8">
                                <div class="right input-group">
                                    <input type="text" class="form-control" v-model="Model.Desc">
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" v-if="Model.ID" class="btn green pull-left" @@click="click_delete()">删除</button>
                    <span style="color:red;font-size:15px;font-weight:bold;">{{errMsg}}</span>
                    <button id="btnSave"  type="submit"  class="btn green" @@click="click_save()">保存</button>
                    @*<button type="button" class="btn dark btn-outline" data-dismiss="modal">关闭</button>*@
                </div>
            </form>
        </div>   
    </div>
</div>
@Html.Partial("_ParitalNoticeForm")
@Html.Partial("_PartialErrorNoticeForm")
@section referenceHeader{
    <link href="~/assets/global/plugins/bootstrap-toastr/toastr.min.css" rel="stylesheet" />
    <script>
        var pageUrl = "/Settings/DepartmentList"
    </script>

}


@section scripts{
    <script src="~/assets/global/plugins/bootbox/bootbox.min.js"></script>
    <script src="~/assets/global/plugins/bootstrap-toastr/toastr.min.js"></script>
    <script src="~/assets/global/plugins/jquery-validation/js/jquery.validate.min.js" type="text/javascript"></script>
    <script src="~/assets/global/plugins/jquery-validation/js/additional-methods.min.js" type="text/javascript"></script>
   
    <!-- 实例化编辑器 -->
    <script type="text/javascript">
        //toastr.options = {
        //    "closeButton": false,
        //    "debug": false,
        //    "positionClass": "toast-bottom-center",
        //    "onclick": null,
        //    "showDuration": "1000",
        //    "hideDuration": "1000",
        //    "timeOut": "1000",
        //    "extendedTimeOut": "1000",
        //    "showEasing": "swing",
        //    "hideEasing": "linear",
        //    "showMethod": "fadeIn",
        //    "hideMethod": "fadeOut"
        //} toastr.warning(item.Err)

        var handleValidation1 = function () {
            var form1 = $('#form_1');
            var error1 = $('.alert-danger', form1);
            var success1 = $('.alert-success', form1);

            form1.validate({
                errorElement: 'span', //default input error message container
                errorClass: 'help-block help-block-error', // default input error message class
                focusInvalid: false, // do not focus the last invalid input
                ignore: "",  // validate all fields including form hidden input
                messages: {
                    Name: { 
                        required: jQuery.validator.format("请输入部门名称")
                    }
                },
                rules: {
                    Name: {
                        required: true
                    }
                },
                invalidHandler: function (event, validator) {      
                    success1.hide();
                    error1.show();                
                },
                errorPlacement: function (error, element) {
                      var cont = $(element).parent('.input-group');
                    if (cont) {
                        cont.after(error);
                    } else {
                        element.after(error);
                    }
                },
                highlight: function (element) {
                    $(element)
                        .closest('.form-group').addClass('has-error'); 
                },
                unhighlight: function (element) { 
                    $(element)
                        .closest('.form-group').removeClass('has-error'); 
                },
                success: function (label) {
                    label
                        .closest('.form-group').removeClass('has-error');
                },
                submitHandler: function (form) {
                    success1.show();
                    error1.hide();
                }
            });


        }


        $(function(){
            handleValidation1();
        })


        var app = new Vue({
            el: '#app',
            data: {
                Model: "",
                List: "",
                errMsg: "",
                isRuning: false
            },
            methods: {
                get_sortCLass: function (sortName) {
                    var _tmp = _.where(this.sort_keys, { SortProperty: sortName });
                    if (_tmp.length === 0) return 'sorting';
                    return (_tmp && _tmp.length > 0 && _tmp[0].SortDirect === 1 ? "sorting_desc" : "sorting_asc");
                },
                click_showPop: function (Obj) {
                    console.log(Obj)
                    if (Obj) {
                        this.Model = Obj.NagigatedDomainObject
                    } else {
                        this.Model = {
                            ID: '',
                            Name: '',
                            Desc: ""
                        }
                    }

                    var vform = $("#form_1").validate();
                    if (typeof (vform) != "undefined") {
                        vform.resetForm();
                    }
                    
                    $("#btnSave").show();
                    $('#modelbasic').modal('show');
                    this.errMsg = "";
                },
                click_delete: function () {
                    var that = this
                    bootbox.confirm({
                        message: "确定要删除吗?",
                        size: "small",
                        buttons: {
                            confirm: {
                                label: '删除',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: '关闭',
                                className: 'btn-danger'
                            }
                        },
                        callback: function (result) {
                            if (result) {
                                console.log(this.Model);
                                $.post("/Settings/DelDepartment", {
                                    depId: that.Model.ID
                                }).then(item => {
                                    if (item.Result) {
                                        //window.location.reload();
                                        //that.errMsg = "删除成功"
                                        popBox("部门删除成功！");
                                    } else {
                                        //that.errMsg = item.Err;
                                        //$("#btnSave").hide();
                                        this.isRuning = false;
                                        popErrBox(item.Err);
                                    }
                                });
                            }
                        }
                    });
                },
                click_save: function () {                         
                    var that = this;                  
                    var apiUrl = "/Settings/UpdateDepartment"
                    if (!this.Model.ID) {
                        apiUrl = "/Settings/AddDepartment"
                    }         
                    setTimeout(function () {                    
                        if ($(".has-error").length > 0) return;
                        if (this.isRuning) return;
                        this.isRuning = true;   
                        $.post(apiUrl, {
                            NagigatedDomainObject: that.Model
                        }).then(item => {
                            that.isRuning = false;
                            console.log(item);
                            if (item.Result) {
                                //that.errMsg = "操作成功"
                                //window.location.reload();
                                popBox(!that.Model.ID ? "部门添加成功！" : "部门修改成功！");
                            } else {
                                //if ($(".has-error").length > 0) {
                                //    that.errMsg = item.Err;
                                //    $("#btnSave").hide();
                                //}
                                this.isRuning = false;
                                popErrBox(item.Err);
                            }
                        });
                    },400)

                }
            }
        })




    </script>
}
