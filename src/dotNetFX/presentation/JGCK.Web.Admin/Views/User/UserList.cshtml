@using JGCK.Respority.UserWork
@using Webdiyer.WebControls.Mvc
@using JGCK.Util
@using JGCK.Web.Admin.Models
@model JGCK.Web.Admin.Models.VmUserStaffIndex
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <a href="#">基础管理</a>
            <i class="fa fa-circle"></i>
        </li>
        <li>
            <span>员工管理</span>
        </li>
    </ul>
    <div class="page-toolbar">
        <div class="btn-group pull-right">
            @{
                var nullStaff = new VmStaff();
                nullStaff.NagigatedDomainObject = new Person();
                nullStaff.NagigatedDomainObject.HireDate = DateTime.Now;
                nullStaff.NagigatedDomainObject.PersonType = OnJobType.OnWork;
                nullStaff.NagigatedDomainObject.Education = EducationType.Junior;
                nullStaff.NagigatedDomainObject.Sex = Gender.Male;
                nullStaff.NagigatedDomainObject.Role = new Role { Name = Model.RoleNameList.FirstOrDefault() };
                nullStaff.NagigatedDomainObject.DepartmentName = Model.DepartmentNameList.FirstOrDefault();
                var initalJsonValue = nullStaff.HiddenJsonString;
            }
            <button type="button" class="btn green btn-sm btn-outline" @@click="click_showDoctorPop(@initalJsonValue)"> 新增 </button>
        </div>
    </div>
</div>
<div class="row">
    <div class="col-md-12">
        <!-- BEGIN SAMPLE TABLE PORTLET-->
        <div class="portlet light">
            <div class="portlet-body">
                <div class="table-toolbar">
                    <div class="row">
                        <div class="col-md-4">
                            <div class="form-group">
                                <!--<label>Small Input Default Group</label>-->
                                <div class="input-group input-group-sm">
                                    @Html.TextBoxFor(m => m.Filter, new { @class = "form-control", placeholder = "姓名、电话" })
                                    <span class="input-group-btn">
                                        <button id="btnSearch" class="btn green" type="button">搜索</button>
                                    </span>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="table-scrollable">
                        <table class="table table-striped table-bordered table-hover dataTable" id="sample_1" style="min-width:1200px;">
                            <thead>
                                <tr>
                                    <th> 序号 </th>
                                    <th @@click="click_setsort('Role.Name')" :class="get_sortCLass('Role.Name')"> 角色 </th>
                                    <th @@click="click_setsort('DepartmentName')" :class="get_sortCLass('DepartmentName')"> 所属部门 </th>
                                    <th @@click="click_setsort('PersonType')" :class="get_sortCLass('PersonType')"> 员工类型	 </th>
                                    <th @@click="click_setsort('Name')" :class="get_sortCLass('Name')"> 用户名 </th>
                                    <th @@click="click_setsort('RealName')" :class="get_sortCLass('RealName')"> 姓名 </th>
                                    <th> 性别 </th>
                                    <th> 学历 </th>
                                    <th> 毕业学校 </th>
                                    <th> 专业 </th>
                                    <th> 联系电话 </th>
                                    <th> 操作 </th>
                                </tr>
                            </thead>
                            <tbody>
                                @{
                                    if (Model != null && Model.ViewObjects != null)
                                    {
                                        var itemIndex = 1;
                                        foreach (var item in Model.ViewObjects)
                                        {
                                            <tr>
                                                <td> @((Model.CurrentIndex - 1) * Model.PageSize + itemIndex) </td>
                                                <td> @(item.NagigatedDomainObject.Role?.Name) </td>
                                                <td> @item.NagigatedDomainObject.DepartmentName </td>
                                                <td> @item.NagigatedDomainObject.PersonType.ToDescription() </td>
                                                <td> @item.NagigatedDomainObject.Name </td>
                                                <td> @item.NagigatedDomainObject.RealName </td>
                                                <td> @item.NagigatedDomainObject.Sex.ToDescription() </td>
                                                <td> @item.NagigatedDomainObject.Education.ToDescription() </td>
                                                <td> @item.NagigatedDomainObject.GraduateInstitution </td>
                                                <td> @item.NagigatedDomainObject.Major </td>
                                                <td> @item.NagigatedDomainObject.Phone </td>
                                                <td> <button type="button" class="btn green btn-sm" @@click="click_showDoctorPop(@(item.HiddenJsonString))"> 编辑 </button> </td>
                                            </tr>
                                            itemIndex++;
                                        }
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                    <div>
                        @Html.Pager(Model.TotalRecordCount, Model.PageSize, Model.CurrentIndex, new PagerOptions
                   {
                       PageIndexParameterName = "p",
                       ContainerTagName = "ul",
                       CssClass = "pagination pagination-sm",
                       CurrentPagerItemTemplate = "<li class=\"active\"><a href=\"javascript:; \"> {0} </a></li>",
                       DisabledPagerItemTemplate = "<li><a href=\"javascript:; \"> {0} </a></li>",
                       PagerItemTemplate = "<li>{0}</li>"
                   })
                    </div>
                </div>
            </div>
            <!-- END SAMPLE TABLE PORTLET-->
        </div>
    </div>
</div>

<div class="modal fade" id="modelfull" tabindex="-1" role="dialog" aria-hidden="true">
    <div class="modal-dialog modal-full">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true"></button>
                <h4 class="modal-title">员工信息</h4>
            </div>
            <div class="modal-body">
              <div class="FormBody">
                    <div class="row">
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li>
                                    <strong>角色:&nbsp;<span style="color:red">*</span></strong>
                                    <select v-model="doctor.Role.Name" class="form-control input-small input-inline">
                                        <option :value="item.id" v-for="item in ListRoleName">{{item.name}}</option>
                                    </select>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li>
                                    <strong>所属部门:&nbsp;<span style="color:red">*</span></strong>
                                    <select v-model="doctor.DepartmentName" class="form-control input-small input-inline">
                                        <option :value="item.id" v-for="item in ListDepartment">{{item.name}}</option>
                                    </select>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('Name'),'form-group':true }">
                                    <strong>用户名:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.Name" :disabled="doctor.ID>0" maxlength="30" v-validate="'required'" class="form-control input-small input-inline" name="用户名" />
                                    <span v-show="errors_has('Name')" class="help-block">{{ errors_title('Name') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('Pwd'),'form-group':true }">
                                    <strong>密码:&nbsp;<span style="color:red">*</span></strong>
                                    <input id="userPWD" type="password" v-model="doctor.Pwd" maxlength="10" class="form-control input-small input-inline" v-validate="'required'" name="密码" />
                                    <span v-show="errors_has('Pwd')" class="help-block">{{ errors_title('Pwd') }}</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li>
                                    <strong>员工类型:&nbsp;<span style="color:red">*</span></strong>
                                    <select v-model="doctor.PersonType" @@change="change_PersonType()" class="form-control input-small input-inline">
                                        <option :value="item.id" v-for="item in ListPersonType">{{item.name}}</option>
                                    </select>

                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('RealName'),'form-group':true }">
                                    <strong>姓名:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.RealName" maxlength="10" v-validate="'required'" class="form-control input-small input-inline" name="姓名" />
                                    <span v-show="errors_has('RealName')" class="help-block">{{ errors_title('RealName') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li>
                                    <strong>性别:&nbsp;<span style="color:red">*</span></strong>
                                    <select v-model="doctor.Sex" class="form-control input-small input-inline">                                 
                                        <option :value="item.id" v-for="item in ListSexList">{{item.name}}</option>
                                    </select>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('IdCard'),'form-group':true }">
                                    <strong>身份证号:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.IdCard" maxlength="20" v-validate="'required|CardNo'" class="form-control input-small input-inline" name="身份证号" />
                                    <span v-show="errors_has('IdCard')" class="help-block">{{ errors_title('IdCard') }}</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <hr />

                    <div class="row">
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li>
                                    <strong>学历:&nbsp;<span style="color:red">*</span></strong>
                                    <select v-model="doctor.Education" class="form-control input-small input-inline">                                    
                                        <option :value="item.id" v-for="item in ListEducationType">{{item.name}}</option>
                                    </select>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('GraduateInstitution'),'form-group':true }">
                                    <strong>毕业学校:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.GraduateInstitution" maxlength="20" v-validate="'required'" class="form-control input-small input-inline" name="毕业学校" />
                                    <span v-show="errors_has('GraduateInstitution')" class="help-block">{{ errors_title('GraduateInstitution') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('Major'),'form-group':true }">
                                    <strong>专业:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.Major" maxlength="20" v-validate="'required'" class="form-control input-small input-inline" name="专业" />
                                    <span v-show="errors_has('Major')" class="help-block">{{ errors_title('Major') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('Email'),'form-group':true }">
                                    <strong>Email:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.Email" maxlength="50" v-validate="'required|email'" class="form-control input-small input-inline" name="Email" />
                                    <span v-show="errors_has('Email')" class="help-block">{{ errors_title('Email') }}</span>
                                </li>
                            </ul>
                        </div>

                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('Phone'),'form-group':true }">
                                    <strong>联系电话:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.Phone" maxlength="20" v-validate="'required|phone'" class="form-control input-small input-inline" name="联系电话" />
                                    <span v-show="errors_has('Phone')" class="help-block">{{ errors_title('Phone') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error':errors_has('EmergencyContact'),'form-group':true }">
                                    <strong>紧急联系人:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.EmergencyContact" maxlength="10" v-validate="'required'" class="form-control input-small input-inline" name="紧急联系人" />
                                    <span v-show="errors_has('EmergencyContact')" class="help-block">{{ errors_title('EmergencyContact') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('EmergencyPhone'),'form-group':true }">
                                    <strong>紧急联系人电话:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.EmergencyPhone" maxlength="20" v-validate="'required|phone'" class="form-control input-small input-inline" name="紧急联系人电话" />
                                    <span v-show="errors_has('EmergencyPhone')" class="help-block">{{ errors_title('EmergencyPhone') }}</span>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3">
                            <ul class="list-unstyled">
                                <li :class="{'has-error': errors_has('FamliyAddress'),'form-group':true }">
                                    <strong>地址:&nbsp;<span style="color:red">*</span></strong>
                                    <input type="text" v-model="doctor.FamliyAddress" v-validate="'required'" class="form-control input-small input-inline" name="地址" />
                                    <span v-show="errors_has('FamliyAddress')" class="help-block">{{ errors_title('FamliyAddress') }}</span>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-xs-3" v-if="doctor.PersonType ===1 ||doctor.PersonType ===2">
                            <ul class="list-unstyled">
                                <li class="form-inline">
                                    <strong>入职时间:</strong>                                
                                    <div class="form-group">
                                        <div class="input-group date form_datetime">
                                            <input class="form-control" readonly="readonly" id="HireDate" size="16" type="text" v-model="doctor.HireDate" :disabled="doctor.PersonType===2" />
                                            <span class="input-group-btn">
                                                <button class="btn default date-set" type="button" :disabled="doctor.PersonType===2">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3" v-if="doctor.PersonType ===1 ||doctor.PersonType ===2">
                            <ul class="list-unstyled">
                                <li class="form-inline">
                                    <strong>离职时间:</strong>                  
                                    <div class="form-group">
                                        <div class="input-group date form_datetime">
                                            <input class="form-control" readonly="readonly" id="LeaveDate" size="16" type="text" v-model="doctor.LeaveDate" :disabled="doctor.PersonType===1" />
                                            <span class="input-group-btn">
                                                <button class="btn default date-set" type="button" :disabled="doctor.PersonType===1">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3" v-if="doctor.PersonType ===3 ||doctor.PersonType ===4">
                            <ul class="list-unstyled">
                                <li class="form-inline">
                                    <strong>实习开始时间:</strong>                          
                                    <div class="form-group">
                                        <div class="input-group date form_datetime">
                                            <input class="form-control" id="PracticeBeginDate" readonly="readonly" size="16" type="text" v-model="doctor.PracticeBeginDate" :disabled="doctor.PersonType===4" />
                                            <span class="input-group-btn">
                                                <button class="btn default date-set" type="button" :disabled="doctor.PersonType===4">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                        <div class="col-xs-3" v-if="doctor.PersonType ===3 ||doctor.PersonType ===4">
                            <ul class="list-unstyled">
                                <li class="form-inline">
                                    <strong>实习结束时间:</strong>                           
                                    <div class="form-group">
                                        <div class="input-group date form_datetime">
                                            <input class="form-control" readonly="readonly" id="PracticeEndDate" size="16" type="text" v-model="doctor.PracticeEndDate" :disabled="doctor.PersonType===3" />
                                            <span class="input-group-btn">
                                                <button class="btn default date-set" type="button" :disabled="doctor.PersonType===3">
                                                    <i class="fa fa-calendar"></i>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                </li>
                            </ul>
                        </div>
                    </div>
                    <hr />
                    <div class="row">
                        <div class="col-xs-12">
                            <strong style="float:left;">备注:</strong>
                            <script id="container" name="content" type="text/plain" style="height:250px">
                            </script>

                        </div>
                    </div>
                </div>
            </div>
            <div class="modal-footer">
                @*<button type="button" v-if="doctor.ID" class="btn green pull-left" @@click="click_delete()">删除</button>*@
                <span style="color:red;font-size:15px;font-weight:bold;">{{errMsg}}</span>
                <button id="btnSave" type="button" class="btn green" @@click="validateBeforeSubmit">{{ !doctor.ID?'添加':'修改' }}</button>
                @*<button type="button" class="btn dark btn-outline" data-dismiss="modal">关闭</button>*@
            </div>
        </div>
        <!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>
@Html.Partial("_ParitalNoticeForm")
@Html.Partial("_PartialErrorNoticeForm")


@section referenceHeader{
    <script>
        var pageUrl = "/User/UserList"
    </script>
    <link href="~/assets/global/plugins/bootstrap-daterangepicker/daterangepicker.min.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/global/plugins/bootstrap-datepicker/css/bootstrap-datepicker3.min.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/global/plugins/bootstrap-timepicker/css/bootstrap-timepicker.min.css" rel="stylesheet" type="text/css" />
    <link href="~/assets/global/plugins/bootstrap-datetimepicker/css/bootstrap-datetimepicker.min.css" rel="stylesheet" type="text/css" />
    <link rel="stylesheet" href="~/assets/global/plugins/umeditor/themes/default/css/umeditor.css">
    <style>
        .FormBody li strong {
            width: 140px;
            display: inline-block;
        }
    </style>
}

@section scripts
{
    <script src="~/assets/global/plugins/bootbox/bootbox.min.js"></script>
    <script src="~/assets/global/plugins/bootstrap-datetimepicker/js/bootstrap-datetimepicker.min.js" type="text/javascript"></script>
    <script src="~/assets/global/plugins/bootstrap-datetimepicker/js/locales/bootstrap-datetimepicker.zh-CN.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/umeditor/third-party/template.min.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/umeditor/umeditor.config.js"></script>
    <script type="text/javascript" src="~/assets/global/plugins/umeditor/umeditor.js"></script>
    @*<script src="~/assets/global/plugins/vee-validate/vee-validate.js"></script>*@

    <script>
        //const config = {
        //    errorBagName: 'errors',
        //    fieldsBagName: 'fields',
        //    delay: 100,
        //    strict: true,
        //    enableAutoClasses: true,
        //    events: 'blur',
        //    inject: true
        //};
        //Vue.use(VeeValidate, config);



        $(function () {
            $("#btnSearch").click(function () {
                if ($("#Filter").val() == "") {
                    location.href = '@Url.Action("UserList")';
                    return;
                }
                var reloadUrlWithFilter = '@Url.Action("UserList")?filter=' + encodeURI($("#Filter").val());
                location.href = reloadUrlWithFilter;
            });


            var um = UM.getEditor('container', {});


            $('#modelfull').on('show.bs.modal', function (e) {
                $("html,body").css({ height: "100 %", overflow: "hidden" })
            })
            $('#modelfull').on('hide.bs.modal', function (e) {
                $("html,body").css({ height: "auto", overflow: "auto" })
            })

        })
        var handleDatetimePicker = function () {
            if (!jQuery().datetimepicker) {
                return;
            }
            var date = new Date();
            $(".form_datetime").datetimepicker({
                minView: "month",
                autoclose: true,
                isRTL: App.isRTL(),
                format: " yyyy-mm-dd",
                //startDate: '2018-1-1',
                todayHighlight: true,
                language: "zh-CN",
                pickerPosition: (App.isRTL() ? "bottom-right" : "bottom-left")
            });
            $('body').removeClass("modal-open");
        }
        var formatTime = function (value, needTime) {
            return value == "" || value == null || value == '1900-01-01T00:00:00' ? "" : moment(value).format("YYYY-MM-DD");
        }


        var app = new Vue({
            el: '#app',
            data: {
                sort_keys:'',
                doctor: { Role: "" },
                errMsg: "",
                errors:[],
                ListSexList: [

                    @{
                                        string sexContent = "";
                                        foreach (var j in Model.SexList)
                                        {
                                            sexContent = sexContent + ",{id:" + j.Value + ", name:'" + j.Text + "'}";

                                        }
                                        if (sexContent.IndexOf(',') == 0)
                                        {
                                            sexContent = sexContent.Substring(1, sexContent.Length - 1);
                                        }

                                    }
                    @Html.Raw(sexContent)
                ],
                ListPersonType: [

                    @{
                                            string personContent = "";
                                            foreach (var j in Model.PersonTypeList)
                                            {
                                                personContent = personContent + ",{id:" + j.Value + ", name:'" + j.Text + "'}";

                                            }
                                            if (personContent.IndexOf(',') == 0)
                                            {
                                                personContent = personContent.Substring(1, personContent.Length - 1);
                                            }

                                          }
                    @Html.Raw(personContent)
                ],
                ListEducationType: [

                    @{
                                                string educationTypeContent = "";
                                                foreach (var e in Model.EducationTypeList)
                                                {
                                                    educationTypeContent = educationTypeContent + ",{id:" + e.Value + ", name:'" + e.Text + "'}"; ;

                                                }
                                                if (educationTypeContent.IndexOf(',') == 0)
                                                {
                                                    educationTypeContent = educationTypeContent.Substring(1, educationTypeContent.Length - 1);
                                                }

                                            }
                    @Html.Raw(educationTypeContent)
                ],
                ListDepartment: @Html.Raw(Model.DepartmentNameListJsonString),
                ListRoleName: @Html.Raw(Model.RoleNameListJsonString)
            },         
            created: function() {
                if (Cookies.get('sf_staffData_sort_keys')) this.sort_keys = JSON.parse(Cookies.get('sf_staffData_sort_keys'))

             

            },
            methods: {
                errors_has: function (name) {
                    if (_.where(this.errors, { name: name }).length > 0) {
                        return true
                    } else {
                        return false
                    }
                },
                errors_title: function (name) {
                    if (_.where(this.errors, { name: name }).length > 0) {
                        return _.where(this.errors, { name: name })[0].value
                    } else {
                        return ""
                    }
                },
                get_sortCLass: function(sortName) {
                    var _tmp = _.where(this.sort_keys, { SortProperty: sortName });
                    if (_tmp.length === 0) return 'sorting';
                    return (_tmp && _tmp.length > 0 && _tmp[0].SortDirect === 1 ? "sorting_desc" : "sorting_asc");
                },
                change_PersonType: function() {
                    setTimeout(function() {
                            handleDatetimePicker();
                        },
                        300)
                },
                click_showDoctorPop: function(doctorObj) {
                    if (doctorObj) {
                        if (doctorObj.NagigatedDomainObject.HireDate)
                            doctorObj.NagigatedDomainObject.HireDate =
                                formatTime(doctorObj.NagigatedDomainObject.HireDate)
                        if (doctorObj.NagigatedDomainObject.LeaveDate)
                            doctorObj.NagigatedDomainObject.LeaveDate =
                                formatTime(doctorObj.NagigatedDomainObject.LeaveDate)
                        if (doctorObj.NagigatedDomainObject.PracticeBeginDate)
                            doctorObj.NagigatedDomainObject.PracticeBeginDate =
                                formatTime(doctorObj.NagigatedDomainObject.PracticeBeginDate)
                        if (doctorObj.NagigatedDomainObject.PracticeEndDate)
                            doctorObj.NagigatedDomainObject.PracticeEndDate =
                                formatTime(doctorObj.NagigatedDomainObject.PracticeEndDate)
                        if (!doctorObj.NagigatedDomainObject.Role) doctorObj.NagigatedDomainObject.Role = {}
                        this.doctor = doctorObj.NagigatedDomainObject
                        if (doctorObj.NagigatedDomainObject.Note)
                            UM.getEditor('container').setContent(doctorObj.NagigatedDomainObject.Note);
                    } else {
                        this.doctor = {
                            Role: {}
                        }
                    }
                    $('#modelfull').modal('show')
                    setTimeout(function() {
                            handleDatetimePicker();
                        },
                        300)
                    console.log(this.doctor)
                    this.errMsg = "";
                    this.errors = [];
                    $('#btnSave').show();
                },
                click_delete: function() {
                    var that = this

                    bootbox.confirm({
                        message: "确定要删除吗?",
                        size: "small",
                        buttons: {
                            confirm: {
                                label: '删除',
                                className: 'btn-success'
                            },
                            cancel: {
                                label: '关闭',
                                className: 'btn-danger'
                            }
                        },
                        callback: function(result) {
                            if (result) {
                                console.log(this.doctor);
                                $.post("/user/DeleteStaff",
                                    {
                                        staffId: that.doctor.ID
                                    }).then(function(item) {
                                    if (item.Result) {
                                        $("#successModal").modal('show');
                                        //window.location.reload();
                                        //that.errMsg = "删除成功"
                                    } else {
                                        that.errMsg = item.Err
                                    }
                                });
                            }
                        }
                    });
                },
                click_setsort: function(Name) {
                    var _tmp = _.where(this.sort_keys, { SortProperty: Name });
                    var SortDirect = (_tmp && _tmp.length > 0 && _tmp[0].SortDirect === 1 ? "Desc" : "Asc");
                    Cookies.remove('sf_staffData_sort_keys');
                    $.post("/ajaxcommon/setsort/",
                        {
                            "ModuleName": "sf_staffData_sort_keys",
                            "SortProperty": Name,
                            "SortDirect": SortDirect
                        }).then(function(item){
                        window.location.reload();
                    });
                },
                validateBeforeSubmit:function() {
                    var that = this
                    this.errors = [];
                    if (!this.doctor.Name) {
                        this.errors.push({ name: "Name", value: "用户名不能为空" });
                    }
                    if (!this.doctor.Pwd) {
                        this.errors.push({ name: "Pwd", value: "密码不能为空" });//
                    } else if (this.doctor.Pwd.length < 5 || this.doctor.Pwd.length >10) {
                        this.errors.push({ name: "Pwd", value: "密码长度必须在 5 到 10 字符" });
                    }


                    if (!this.doctor.RealName) {
                        this.errors.push({ name: "RealName", value: "姓名不能为空" });
                    }
                    if (!this.doctor.IdCard) {
                        this.errors.push({ name: "IdCard", value: "身份证号不能为空" });
                    } else if (!/(^\d{15}$)|(^\d{18}$)|(^\d{17}(\d|X|x)$)/.test(this.doctor.IdCard)){
                        this.errors.push({ name: "IdCard", value: "身份证号码输入不正确" });
                    }

                    if (!this.doctor.GraduateInstitution) {
                        this.errors.push({ name: "GraduateInstitution", value: "毕业学校不能为空" });
                    }
                    if (!this.doctor.Major) {
                        this.errors.push({ name: "Major", value: "专业不能为空" });
                    }
                    if (!this.doctor.Email) {
                        this.errors.push({ name: "Email", value: "Email不能为空" });
                    } else if (!/^[a-zA-Z0-9_.-]+@@[a-zA-Z0-9-]+(\.[a-zA-Z0-9-]+)*\.[a-zA-Z0-9]{2,6}$/.test(this.doctor.Email)) {
                        this.errors.push({ name: "Email", value: "Email格式不正确" });
                    }
                    if (!this.doctor.Phone) {
                        this.errors.push({ name: "Phone", value: "联系电话不能为空" });
                    } else if (!(this.doctor.Phone.length === 11 && /^((13|14|15|17|18)[0-9]{1}\d{8})$/.test(this.doctor.Phone) || /^(\d{3,4}-)?(\d{7,8})(-(\d+))?$/.test(this.doctor.Phone))) {
                        this.errors.push({ name: "Phone", value: "手机或固话格式不正确" });
                    }
                    if (!this.doctor.EmergencyContact) {
                        this.errors.push({ name: "EmergencyContact", value: "紧急联系人不能为空" });
                    }
                    if (!this.doctor.EmergencyPhone) {
                        this.errors.push({ name: "EmergencyPhone", value: "紧急联系人电话不能为空" });
                    } else if (!(this.doctor.EmergencyPhone.length === 11 && /^((13|14|15|17|18)[0-9]{1}\d{8})$/.test(this.doctor.EmergencyPhone) || /^(\d{3,4}-)?(\d{7,8})(-(\d+))?$/.test(this.doctor.EmergencyPhone))) {
                        this.errors.push({ name: "EmergencyPhone", value: "手机或固话格式不正确" });
                    }
                    if (!this.doctor.FamliyAddress) {
                        this.errors.push({ name: "FamliyAddress", value: "地址不能为空" });
                    }           
                    if (!this.errors.length) {
                        this.click_save()
                    }

                },
                click_save: function() {
                    var that = this;
                    var apiUrl = "/user/UpdateStaff"
                    if (!this.doctor.ID) {
                        if (!this.doctor.Pwd) this.doctor.Pwd = "123456";
                        apiUrl = "/user/AddStaff"
                    }
                    if ($("#HireDate").val()) this.doctor.HireDate = $("#HireDate").val()
                    if ($("#LeaveDate").val()) this.doctor.LeaveDate = $("#LeaveDate").val()
                    if ($("#PracticeBeginDate").val()) this.doctor.PracticeBeginDate = $("#PracticeBeginDate").val()
                    if ($("#PracticeEndDate").val()) this.doctor.PracticeEndDate = $("#PracticeEndDate").val()
                    this.doctor.Note = UM.getEditor('container').getContent();
                    if (this.isRuning) return;
                    this.isRuning = true;
                    $.post(apiUrl,
                        {
                            NagigatedDomainObject: this.doctor
                        }).then(function(item){
                        that.isRuning = false;
                        console.log(item);
                        if (item.Result) {
                            //that.errMsg = "操作成功"
                            //window.location.reload();
                            //$("#successModal").modal('show');
                            popBox(!that.doctor.ID ? "员工信息添加成功！" : "员工信息更新成功！");
                        } else {
                            //that.errMsg = item.Err;
                            //$('#btnSave').hide();
                            isRuning = false;
                            popErrBox(item.Err);
                        }
                    });

                }
            }
        });
    </script>


}
